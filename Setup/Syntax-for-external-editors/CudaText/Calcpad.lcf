object SyntAnal6: TLibSyntAnalyzer
  Formats = <
    item
      DisplayName = 'Comment'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clGreen
      Font.Height = -13
      Font.Name = 'Consolas'
      Font.Style = []
    end
    item
      DisplayName = 'Function'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlack
      Font.Height = -13
      Font.Name = 'Consolas'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Variable'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlue
      Font.Height = -13
      Font.Name = 'Consolas'
      Font.Style = [fsItalic]
    end
    item
      DisplayName = 'Keyword'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clFuchsia
      Font.Height = -13
      Font.Name = 'Consolas'
      Font.Style = []
    end
    item
      DisplayName = 'Number'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlack
      Font.Height = -13
      Font.Name = 'Consolas'
      Font.Style = []
    end
    item
      DisplayName = 'Units'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clTeal
      Font.Height = -13
      Font.Name = 'Consolas'
      Font.Style = []
    end
    item
      DisplayName = 'Operator'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clOlive
      Font.Height = -13
      Font.Name = 'Consolas'
      Font.Style = []
    end
    item
      DisplayName = 'Separator'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clOlive
      Font.Height = -13
      Font.Name = 'Consolas'
      Font.Style = []
    end
    item
      DisplayName = 'Input'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clRed
      Font.Height = -13
      Font.Name = 'Consolas'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Brackets'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clMaroon
      Font.Height = -13
      Font.Name = 'Consolas'
      Font.Style = []
    end
    item
      DisplayName = 'Macro'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clPurple
      Font.Height = -13
      Font.Name = 'Consolas'
      Font.Style = []
    end>
  TokenRules = <
    item
      DisplayName = 'Title'
      StyleName = 'Comment'
      Expression = '".*?(["\r\n])'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Comment'
      StyleName = 'Comment'
      Expression = #39'.*?(['#39'\r\n])'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Operator'
      StyleName = 'Operator'
      TokenType = 7
      Expression = '[\+\-\*/\\'#247'%\^'#8801#8800'<>'#8804#8805#8743#8744#8853'=!]'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Separator'
      StyleName = 'Separator'
      TokenType = 8
      Expression = '[;&@:\|]'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Brackets {}'
      StyleName = 'Brackets'
      TokenType = 10
      Expression = '[\{\}]'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Brackets ()'
      StyleName = 'Brackets'
      TokenType = 10
      Expression = '[\(\)]'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Input'
      StyleName = 'Input'
      TokenType = 9
      Expression = '?'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Macro'
      StyleName = 'Macro'
      TokenType = 11
      Expression = '[a-zA-Z]+[a-zA-Z0-9_]*\$'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Keyword'
      StyleName = 'Keyword'
      TokenType = 3
      Expression = 
        '\#([Rr]epeat|[Ll]oop|[Bb]reak|[Cc]ontinue|[Ss]how|[Hh]ide|[Pp]re' + 
		'|[Pp]ost|[Vv]al|[Ee]qu|[Nn]oc|[Nn]osub|[Nn]ovar|[Vv]arsub|[Rr]ou' + 
		'nd|[Rr]ad|[Dd]eg|[Ii]f|[Ee]lse\s[Ii]f|[Ee]lse|[Ee]nd\s[Ii]f|[Ii]' + 
		'nclude|[Ll]ocal|[Gg]lobal|[Dd]ef|[Ee]nd\s[Dd]ef|[Pp]ause|[Ii]nput' + 
		'|[Ss]plit|[Ww]rap)\b'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Method'
      StyleName = 'Keyword'
      TokenType = 3
      Expression = 
        '\$([Rr]oot|[Ff]ind|[Ii]nf|[Ss]up|[Aa]rea|[Ii]ntegral|[Ss]lope|[S' +
        's]um|[Pp]roduct|[Rr]epeat|[Mm]ap|[Pp]lot)\b'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Function'
      StyleName = 'Function'
      TokenType = 1
      Expression = 
        '\b(sign|abs|sin|cos|tan|csc|sec|cot|sinh|cosh|tanh|csch|sech|cot' +
        'h|asin|acos|atan|acsc|asec|acot|asinh|acosh|atanh|acsch|asech|ac' +
        'oth|ln|log|log_2|exp|sqr|sqrt|cbrt|round|floor|ceiling|trunc|re|' +
        'im|phase|random|root|atan2|min|max|sum|sumsq|srss|average|produc' +
        't|mean|switch|take|line|spline|mod|gcd|lcm|not|and|or|xor)\b'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Variable'
      StyleName = 'Variable'
      TokenType = 2
      Expression = 
        '\b[a-zA-Z\x{03B1}-\x{03C9}\x{0391}-\x{03A9}\x{00B0}\x{00F8}\x{00' +
        'D8}\x{2221}]+[a-zA-Z\x{03B1}-\x{03C9}\x{0391}-\x{03A9}\x{00B0}\x' +
        '{00F8}\x{00D8}\x{2221}0-9_,\x{2032}\x{2033}\x{2034}\x{2057}]*\b'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Number'
      StyleName = 'Number'
      TokenType = 5
      Expression = '\b([0-9]*\.?[0-9]*)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Units'
      StyleName = 'Units'
      TokenType = 6
      Expression = '(?<=\b([\?\|0-9.]+))[A-Za-z'#1042#176#8242#8243']+'
      ColumnFrom = 0
      ColumnTo = 0
    end>
  BlockRules = <
    item
      DisplayName = '#repeat'
      ConditionList = <
        item
          TagList.Strings = (
            '#repeat')
          IgnoreCase = True
        end>
      BlockEnd = '#loop'
      HighlightPos = cpAny
      DrawStaple = True
      CollapseFmt = '%sz0'
      IgnoreAsParent = False
    end
    item
      DisplayName = '#loop'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TagList.Strings = (
            '#loop')
          IgnoreCase = True
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = '#if'
      ConditionList = <
        item
          TagList.Strings = (
            '#if')
          IgnoreCase = True
        end>
      BlockEnd = '#end if'
      HighlightPos = cpAny
      DrawStaple = True
      CollapseFmt = '%sz0'
      IgnoreAsParent = False
    end
    item
      DisplayName = '#end if'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TagList.Strings = (
            '#end if')
          IgnoreCase = True
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = '#def'
      ConditionList = <
        item
          TagList.Strings = (
            '#def')
        end>
      BlockEnd = '#end def'
      HighlightPos = cpAny
      DrawStaple = True
      CollapseFmt = '%sz0'
      IgnoreAsParent = False
    end
    item
      DisplayName = '#end def'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TagList.Strings = (
            '#end def')
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end>
  CodeTemplates = <>
  SubAnalyzers = <
    item
      DisplayName = 'Sub lexer rule 1'
      StyleName = 'Comment'
      SyntAnalyzer = SyntAnal9
    end>
  TokenTypeNames.Strings = (
    'Comment'
    'Function'
    'Variable'
    'Keyword'
    'Command'
    'Number'
    'Unit'
    'Operator'
    'Separator'
    'Input'
    'Brackets'
    'Macro')
  Extentions = 'cpd'
  LexerName = 'Calcpad'
  Notes.Strings = (
    'Created by Ned Ganchovski')
  RestartFromLineStart = True
  LineComment = #39
  Charset = DEFAULT_CHARSET
end
